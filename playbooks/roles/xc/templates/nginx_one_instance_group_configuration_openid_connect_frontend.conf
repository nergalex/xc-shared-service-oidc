server {
    include conf.d/openid_connect.server_conf; # Authorization code flow and Relying Party processing

    listen 8000 default_server;

    location / {
        # OpenID Connect
        auth_jwt "frontend" token=$session_jwt;
        error_page 401 = @do_oidc_flow;

        auth_jwt_key_request /_jwks_uri;

        # Successfully authenticated users are proxied to the backend,
        # with 'sub' claim passed as HTTP header
        proxy_set_header username $jwt_claim_sub;

        # Bearer token is uses to authorize NGINX to access protected backend
        proxy_set_header Authorization "Bearer $access_token";

        # Tell the upstream LB to handle this request a an authenticated user
        proxy_set_header x-oauth-flow "oidc-user";

        # Intercept and redirect "401 Unauthorized" proxied responses to nginx
        # for processing with the error_page directive. Necessary if Access Token
        # can expire before ID Token.
        #
        # Disabled because the downstream LB manages the error page to return
        #
        #proxy_intercept_errors on;

        # Route
        proxy_set_header Host $host;
        proxy_pass http://$host;# The internal/origin app LB

        access_log /nginx/var/log/nginx/access.log gw_oidc;
    }
}

# vim: syntax=nginx