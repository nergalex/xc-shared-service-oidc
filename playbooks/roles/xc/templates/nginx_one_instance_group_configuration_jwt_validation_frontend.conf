auth_jwt_claim_set $extracted_jwt_scope scp;

server {
    include conf.d/jwt_validation.server_conf; # Authorization code flow and Relying Party processing

    listen 8001 default_server;

    location / {
        # JWT signature validation
        auth_jwt_type signed; # JSON Web Signature (JWS) - JWT content is digitally signed.
        auth_jwt_key_request /_jwks_uri; # The signature is verified (for JWS) or payload is decrypted (for JWE) with the key found in the auth_jwt_key_request (matching on the kid (“key ID”), if present, and alg (“algorithm”) header fields).
        auth_jwt "backend"; # JWT is passed in the “Authorization” header as a Bearer Token. During JWT verification, NGINX Plus automatically validates only nbf (“not before”) and exp (“expires”) claims.

        # Validation of the scope
        set $valid_jwt_scope 0;
        if ($extracted_jwt_scope = $http_x_my_scope ) {
            set $valid_jwt_scope 1;
        }
        auth_jwt_require $valid_jwt_scope error=401;

        # Tell the upstream LB to handle this request a an authenticated user
        proxy_set_header x-oauth-flow "client-credential-or-implicit";

        # Route
        proxy_set_header Host $host;
        proxy_pass http://$host; # The internal/origin app LB

        access_log /nginx/var/log/nginx/access.log main_jwt;
    }
}

# vim: syntax=nginx